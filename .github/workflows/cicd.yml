name: CI/CD

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn clean test

      - name: Build and run the application
        run: mvn spring-boot:run &

      - name: Wait for application to start
        run: sleep 30

      - name: Cleanup
        if: always()
        run: |

          SPRING_BOOT_PID=$(pgrep -f 'spring-boot')
          if [ ! -z "$SPRING_BOOT_PID" ]; then
          echo "Stopping Spring Boot application..."
          kill $SPRING_BOOT_PID
          fi
  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: AWS authentication
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-duration-seconds: 1200
          role-session-name: ${{ github.sha }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_REPO }}:${{ github.sha }}

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region us-west-2 --name devsu
          kubectl set image deployment/myapp-deployment devsu=${{  secrets.DOCKER_REPO }}:${{ github.sha }} -n ${{ secrets.NAMESPACE }}
